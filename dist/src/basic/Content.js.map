{"version":3,"sources":["../../../src/basic/Content.js"],"names":["Content","props","state","orientation","val","maxComp","Math","max","variable","deviceWidth","deviceHeight","width","setState","children","contentContainerStyle","disableKBDismissScroll","keyboardShouldPersistTaps","padder","style","containerStyle","flex","variables","context","theme","isIphoneX","x","y","_scrollview","c","_root","padding","contentPadding","undefined","Component","contextTypes","PropTypes","object","propTypes","bool","string","oneOfType","number","array","StyledContent","mapPropsToStyleNames"],"mappings":"21BAAA,iEACA,qC,mDACA,4B,2CACA,yCACA,2FAEA,qD,iDACA,mE,68BAEMA,Q,oDAKJ,iBAAYC,KAAZ,CAAmB,uIACXA,KADW,GAEjB,MAAKC,KAAL,CAAa,CACXC,YAAa,UADF,CAAb,CAFiB,aAKlB,C,sEAEYC,G,CAAK,CAChB,GAAMC,SAAUC,KAAKC,GAAL,CAASC,mBAASC,WAAlB,CAA+BD,mBAASE,YAAxC,CAAhB,CAEA,GAAIN,IAAIO,KAAJ,EAAaN,OAAjB,CAA0B,KAAKO,QAAL,CAAc,CAAET,YAAa,WAAf,CAAd,EAA1B,IACK,CACH,KAAKS,QAAL,CAAc,CAAET,YAAa,UAAf,CAAd,EACD,CACF,C,uCAEQ,4BAQH,KAAKF,KARF,CAELY,QAFK,QAELA,QAFK,CAGLC,qBAHK,QAGLA,qBAHK,CAILC,sBAJK,QAILA,sBAJK,CAKLC,yBALK,QAKLA,yBALK,CAMLC,MANK,QAMLA,MANK,CAOLC,KAPK,QAOLA,KAPK,CASP,GAAMC,gBAAiB,CAAEC,KAAM,CAAR,CAAvB,CACA,GAAMC,WAAY,KAAKC,OAAL,CAAaC,KAAb,CACd,KAAKD,OAAL,CAAaC,KAAb,CAAmB,4BAAnB,EAAiDF,SADnC,CAEdb,kBAFJ,CAIA,MAAOa,WAAUG,SAAV,CACL,8BAAC,yBAAD,EAAc,MAAOL,cAArB,iDACE,8BAAC,2DAAD,WACE,iCAAkC,KADpC,CAEE,oBAAqBJ,uBAAyB,IAAzB,CAAgC,CAAEU,EAAG,CAAL,CAAQC,EAAG,CAAX,CAFvD,CAGE,0BAA2BV,2BAA6B,SAH1D,CAIE,IAAK,eAAK,CACR,OAAKW,WAAL,CAAmBC,CAAnB,CACA,OAAKC,KAAL,CAAaD,CAAb,CACD,CAPH,EAQM,KAAK3B,KARX,EASE,MAAOiB,KATT,CAUE,sBAAuB,CACrB,CAAEY,QAASb,OAASI,UAAUU,cAAnB,CAAoCC,SAA/C,CADqB,CAErBlB,qBAFqB,CAVzB,kDAeGD,QAfH,CADF,CADK,CAqBL,8BAAC,2DAAD,WACE,iCAAkC,KADpC,CAEE,oBAAqBE,uBAAyB,IAAzB,CAAgC,CAAEU,EAAG,CAAL,CAAQC,EAAG,CAAX,CAFvD,CAGE,0BAA2BV,2BAA6B,SAH1D,CAIE,IAAK,eAAK,CACR,OAAKW,WAAL,CAAmBC,CAAnB,CACA,OAAKC,KAAL,CAAaD,CAAb,CACD,CAPH,EAQM,KAAK3B,KARX,EASE,sBAAuB,CACrB,CAAE6B,QAASb,OAASI,UAAUU,cAAnB,CAAoCC,SAA/C,CADqB,CAErBlB,qBAFqB,CATzB,kDAcGD,QAdH,CArBF,CAsCD,C,qBAzEmBoB,gB,EAAhBjC,O,CACGkC,Y,CAAe,CACpBX,MAAOY,oBAAUC,MADG,C,CA2ExBpC,QAAQqC,SAAR,CAAoB,CAClBtB,uBAAwBoB,oBAAUG,IADhB,CAElBtB,0BAA2BmB,oBAAUI,MAFnB,CAGlBtB,OAAQkB,oBAAUG,IAHA,CAIlBpB,MAAOiB,oBAAUK,SAAV,CAAoB,CACzBL,oBAAUC,MADe,CAEzBD,oBAAUM,MAFe,CAGzBN,oBAAUO,KAHe,CAApB,CAJW,CAApB,CAWA,GAAMC,eAAgB,yCACpB,oBADoB,CAEpB,EAFoB,CAGpBC,8BAHoB,EAIpB5C,OAJoB,CAAtB,C,QAM0BA,O,CAAjB2C,a","file":"Content.js","sourcesContent":["import { connectStyle } from 'native-base-shoutem-theme';\r\nimport PropTypes from 'prop-types';\r\nimport React, { Component } from 'react';\r\nimport { SafeAreaView } from 'react-native';\r\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\r\n\r\nimport variable from '../theme/variables/platform';\r\nimport mapPropsToStyleNames from '../utils/mapPropsToStyleNames';\r\n\r\nclass Content extends Component {\r\n  static contextTypes = {\r\n    theme: PropTypes.object\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      orientation: 'portrait'\r\n    };\r\n  }\r\n\r\n  layoutChange(val) {\r\n    const maxComp = Math.max(variable.deviceWidth, variable.deviceHeight);\r\n\r\n    if (val.width >= maxComp) this.setState({ orientation: 'landscape' });\r\n    else {\r\n      this.setState({ orientation: 'portrait' });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      children,\r\n      contentContainerStyle,\r\n      disableKBDismissScroll,\r\n      keyboardShouldPersistTaps,\r\n      padder,\r\n      style\r\n    } = this.props;\r\n    const containerStyle = { flex: 1 };\r\n    const variables = this.context.theme\r\n      ? this.context.theme['@@shoutem.theme/themeStyle'].variables\r\n      : variable;\r\n\r\n    return variables.isIphoneX ? (\r\n      <SafeAreaView style={containerStyle}>\r\n        <KeyboardAwareScrollView\r\n          automaticallyAdjustContentInsets={false}\r\n          resetScrollToCoords={disableKBDismissScroll ? null : { x: 0, y: 0 }}\r\n          keyboardShouldPersistTaps={keyboardShouldPersistTaps || 'handled'}\r\n          ref={c => {\r\n            this._scrollview = c;\r\n            this._root = c;\r\n          }}\r\n          {...this.props}\r\n          style={style}\r\n          contentContainerStyle={[\r\n            { padding: padder ? variables.contentPadding : undefined },\r\n            contentContainerStyle\r\n          ]}\r\n        >\r\n          {children}\r\n        </KeyboardAwareScrollView>\r\n      </SafeAreaView>\r\n    ) : (\r\n      <KeyboardAwareScrollView\r\n        automaticallyAdjustContentInsets={false}\r\n        resetScrollToCoords={disableKBDismissScroll ? null : { x: 0, y: 0 }}\r\n        keyboardShouldPersistTaps={keyboardShouldPersistTaps || 'handled'}\r\n        ref={c => {\r\n          this._scrollview = c;\r\n          this._root = c;\r\n        }}\r\n        {...this.props}\r\n        contentContainerStyle={[\r\n          { padding: padder ? variables.contentPadding : undefined },\r\n          contentContainerStyle\r\n        ]}\r\n      >\r\n        {children}\r\n      </KeyboardAwareScrollView>\r\n    );\r\n  }\r\n}\r\n\r\nContent.propTypes = {\r\n  disableKBDismissScroll: PropTypes.bool,\r\n  keyboardShouldPersistTaps: PropTypes.string,\r\n  padder: PropTypes.bool,\r\n  style: PropTypes.oneOfType([\r\n    PropTypes.object,\r\n    PropTypes.number,\r\n    PropTypes.array\r\n  ])\r\n};\r\n\r\nconst StyledContent = connectStyle(\r\n  'NativeBase.Content',\r\n  {},\r\n  mapPropsToStyleNames\r\n)(Content);\r\n\r\nexport { StyledContent as Content };\r\n"]}