{"version":3,"sources":["../../../src/basic/IconNB.js"],"names":["IconNB","props","setIcon","type","nextProps","iconType","undefined","context","theme","variables","iconFamily","Icon","Ionicons","_root","c","Component","contextTypes","PropTypes","object","propTypes","oneOf","StyledIconNB","mapPropsToStyleNames"],"mappings":"y1BAAA,4B,2CACA,qC,mDACA,iEACA,8BACA,4D,iDAEA,mE,68BAEMA,O,mDAKJ,gBAAYC,KAAZ,CAAmB,oIACXA,KADW,GAEjB,MAAKC,OAAL,CAAaD,MAAME,IAAnB,EAFiB,aAGlB,C,iGAG0BC,S,CAAW,CACpC,GAAIA,UAAUD,IAAV,EAAkB,KAAKF,KAAL,CAAWE,IAAX,GAAoBC,UAAUD,IAApD,CAA0D,CACxD,KAAKD,OAAL,CAAaE,UAAUD,IAAvB,EACD,CACF,C,wCAEOE,Q,CAAU,CAChB,GAAIA,WAAaC,SAAb,EAA0B,gBAAI,IAAJ,CAAU,eAAV,CAA9B,CAA0D,CAExDD,SAAW,KAAKE,OAAL,CAAaC,KAAb,CAAmB,4BAAnB,EAAiDC,SAAjD,CACRC,UADH,CAED,CACD,KAAKC,IAAL,CAAYC,kBAAZ,CACD,C,8EAG0BR,S,CAAW,CACpC,GAAIA,UAAUD,IAAV,EAAkB,KAAKF,KAAL,CAAWE,IAAX,GAAoBC,UAAUD,IAApD,CAA0D,CACxD,KAAKD,OAAL,CAAaE,UAAUD,IAAvB,EACD,CACF,C,uCAEQ,iBACP,MAAO,oCAAM,IAAN,WAAW,IAAK,sBAAM,QAAKU,KAAL,CAAaC,CAAnB,EAAhB,EAA2C,KAAKb,KAAhD,mDAAP,CACD,C,oBAnCkBc,gB,EAAff,M,CACGgB,Y,CAAe,CACpBR,MAAOS,oBAAUC,MADG,C,CAqCxBlB,OAAOmB,SAAP,CAAmB,CACjBhB,KAAMc,oBAAUG,KAAV,CAAgB,CAAC,UAAD,CAAhB,CADW,CAAnB,CAIA,GAAMC,cAAe,yCACnB,mBADmB,CAEnB,EAFmB,CAGnBC,8BAHmB,EAInBtB,MAJmB,CAArB,C,QAMyBA,M,CAAhBqB,Y","file":"IconNB.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connectStyle } from 'native-base-shoutem-theme';\r\nimport { get } from 'lodash';\r\nimport Ionicons from 'react-native-vector-icons/Ionicons';\r\n\r\nimport mapPropsToStyleNames from '../utils/mapPropsToStyleNames';\r\n\r\nclass IconNB extends Component {\r\n  static contextTypes = {\r\n    theme: PropTypes.object\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.setIcon(props.type);\r\n  }\r\n\r\n  // eslint-disable-next-line camelcase\r\n  UNSAFE_componentWillUpdate(nextProps) {\r\n    if (nextProps.type && this.props.type !== nextProps.type) {\r\n      this.setIcon(nextProps.type);\r\n    }\r\n  }\r\n\r\n  setIcon(iconType) {\r\n    if (iconType === undefined && get(this, 'context.theme')) {\r\n      // eslint-disable-next-line\r\n      iconType = this.context.theme['@@shoutem.theme/themeStyle'].variables\r\n        .iconFamily;\r\n    }\r\n    this.Icon = Ionicons;\r\n  }\r\n\r\n  // eslint-disable-next-line camelcase\r\n  UNSAFE_componentWillUpdate(nextProps) {\r\n    if (nextProps.type && this.props.type !== nextProps.type) {\r\n      this.setIcon(nextProps.type);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <this.Icon ref={c => (this._root = c)} {...this.props} />;\r\n  }\r\n}\r\n\r\nIconNB.propTypes = {\r\n  type: PropTypes.oneOf(['Ionicons'])\r\n};\r\n\r\nconst StyledIconNB = connectStyle(\r\n  'NativeBase.IconNB',\r\n  {},\r\n  mapPropsToStyleNames\r\n)(IconNB);\r\n\r\nexport { StyledIconNB as IconNB };\r\n"]}