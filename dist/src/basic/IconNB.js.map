{"version":3,"sources":["../../../src/basic/IconNB.js"],"names":["IconNB","props","setIcon","type","iconType","undefined","context","theme","variables","iconFamily","Icon","Ionicons","nextProps","_root","c","Component","contextTypes","PropTypes","object","propTypes","style","oneOfType","number","array","oneOf","StyledIconNB","mapPropsToStyleNames"],"mappings":"y1BAAA,4B,2CACA,qC,mDACA,iEACA,4D,iDAEA,mE,68BAEMA,O,mDAKJ,gBAAYC,KAAZ,CAAmB,oIACXA,KADW,GAEjB,MAAKC,OAAL,CAAaD,MAAME,IAAnB,EAFiB,aAGlB,C,2DAEOC,Q,CAAU,CAChB,GAAIA,UAAYC,SAAZ,EAAyB,KAAKC,OAAL,CAAaC,KAA1C,CAAiD,CAC/CH,SAAW,KAAKE,OAAL,CAAaC,KAAb,CAAmB,4BAAnB,EAAiDC,SAAjD,CACRC,UADH,CAED,CACD,OAAQL,QAAR,EACA,IAAK,UAAL,CACE,KAAKM,IAAL,CAAYC,kBAAZ,CACA,MACF,QACE,KAAKD,IAAL,CAAYC,kBAAZ,CALF,CAOD,C,8EAG0BC,S,CAAW,CACpC,GAAIA,UAAUT,IAAV,EAAkB,KAAKF,KAAL,CAAWE,IAAX,GAAoBS,UAAUT,IAApD,CAA0D,CACxD,KAAKD,OAAL,CAAaU,UAAUT,IAAvB,EACD,CACF,C,uCAEQ,iBACP,MAAO,oCAAM,IAAN,WAAW,IAAK,sBAAM,QAAKU,KAAL,CAAaC,CAAnB,EAAhB,EAA2C,KAAKb,KAAhD,mDAAP,CACD,C,oBAjCkBc,gB,EAAff,M,CACGgB,Y,CAAe,CACpBT,MAAOU,oBAAUC,MADG,C,CAmCxBlB,OAAOmB,SAAP,CAAmB,CACjBC,MAAOH,oBAAUI,SAAV,CAAoB,CACzBJ,oBAAUC,MADe,CAEzBD,oBAAUK,MAFe,CAGzBL,oBAAUM,KAHe,CAApB,CADU,CAMjBpB,KAAMc,oBAAUO,KAAV,CAAgB,CAAC,UAAD,CAAhB,CANW,CAAnB,CASA,GAAMC,cAAe,yCACnB,mBADmB,CAEnB,EAFmB,CAGnBC,8BAHmB,EAInB1B,MAJmB,CAArB,C,QAMyBA,M,CAAhByB,Y","file":"IconNB.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connectStyle } from 'native-base-shoutem-theme';\r\nimport Ionicons from 'react-native-vector-icons/Ionicons';\r\n\r\nimport mapPropsToStyleNames from '../utils/mapPropsToStyleNames';\r\n\r\nclass IconNB extends Component {\r\n  static contextTypes = {\r\n    theme: PropTypes.object\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.setIcon(props.type);\r\n  }\r\n\r\n  setIcon(iconType) {\r\n    if (iconType == undefined && this.context.theme) {\r\n      iconType = this.context.theme['@@shoutem.theme/themeStyle'].variables\r\n        .iconFamily;\r\n    }\r\n    switch (iconType) {\r\n    case 'Ionicons':\r\n      this.Icon = Ionicons;\r\n      break;\r\n    default:\r\n      this.Icon = Ionicons;\r\n    }\r\n  }\r\n\r\n  // eslint-disable-next-line camelcase\r\n  UNSAFE_componentWillUpdate(nextProps) {\r\n    if (nextProps.type && this.props.type !== nextProps.type) {\r\n      this.setIcon(nextProps.type);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <this.Icon ref={c => (this._root = c)} {...this.props} />;\r\n  }\r\n}\r\n\r\nIconNB.propTypes = {\r\n  style: PropTypes.oneOfType([\r\n    PropTypes.object,\r\n    PropTypes.number,\r\n    PropTypes.array\r\n  ]),\r\n  type: PropTypes.oneOf(['Ionicons'])\r\n};\r\n\r\nconst StyledIconNB = connectStyle(\r\n  'NativeBase.IconNB',\r\n  {},\r\n  mapPropsToStyleNames\r\n)(IconNB);\r\n\r\nexport { StyledIconNB as IconNB };\r\n"]}