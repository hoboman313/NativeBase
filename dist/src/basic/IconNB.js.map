{"version":3,"sources":["../../../src/basic/IconNB.js"],"names":["IconNB","props","setIcon","type","iconType","undefined","context","theme","variables","iconFamily","Icon","Ionicons","nextProps","_root","c","Component","contextTypes","PropTypes","object","propTypes","oneOf","StyledIconNB","mapPropsToStyleNames"],"mappings":"u1BAAA,4B,2CACA,qC,mDACA,iEACA,8BACA,4D,iDAEA,mE,68BAEMA,O,mDAKJ,gBAAYC,KAAZ,CAAmB,oIACXA,KADW,GAEjB,MAAKC,OAAL,CAAaD,MAAME,IAAnB,EAFiB,aAGlB,C,2DAEOC,Q,CAAU,CAChB,GAAIA,WAAaC,SAAb,EAA0B,gBAAI,IAAJ,CAAU,eAAV,CAA9B,CAA0D,CAExDD,SAAW,KAAKE,OAAL,CAAaC,KAAb,CAAmB,4BAAnB,EAAiDC,SAAjD,CACRC,UADH,CAED,CACD,KAAKC,IAAL,CAAYC,kBAAZ,CACD,C,8EAG0BC,S,CAAW,CACpC,GAAIA,UAAUT,IAAV,EAAkB,KAAKF,KAAL,CAAWE,IAAX,GAAoBS,UAAUT,IAApD,CAA0D,CACxD,KAAKD,OAAL,CAAaU,UAAUT,IAAvB,EACD,CACF,C,uCAEQ,iBACP,MAAO,oCAAM,IAAN,WAAW,IAAK,sBAAM,QAAKU,KAAL,CAAaC,CAAnB,EAAhB,EAA2C,KAAKb,KAAhD,mDAAP,CACD,C,oBA5BkBc,gB,EAAff,M,CACGgB,Y,CAAe,CACpBT,MAAOU,oBAAUC,MADG,C,CA8BxBlB,OAAOmB,SAAP,CAAmB,CACjBhB,KAAMc,oBAAUG,KAAV,CAAgB,CAAC,UAAD,CAAhB,CADW,CAAnB,CAIA,GAAMC,cAAe,yCACnB,mBADmB,CAEnB,EAFmB,CAGnBC,8BAHmB,EAInBtB,MAJmB,CAArB,C,QAMyBA,M,CAAhBqB,Y","file":"IconNB.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connectStyle } from 'native-base-shoutem-theme';\nimport { get } from 'lodash';\nimport Ionicons from 'react-native-vector-icons/Ionicons';\n\nimport mapPropsToStyleNames from '../utils/mapPropsToStyleNames';\n\nclass IconNB extends Component {\n  static contextTypes = {\n    theme: PropTypes.object\n  };\n\n  constructor(props) {\n    super(props);\n    this.setIcon(props.type);\n  }\n\n  setIcon(iconType) {\n    if (iconType === undefined && get(this, 'context.theme')) {\n      // eslint-disable-next-line\n      iconType = this.context.theme['@@shoutem.theme/themeStyle'].variables\n        .iconFamily;\n    }\n    this.Icon = Ionicons;\n  }\n\n  // eslint-disable-next-line camelcase\n  UNSAFE_componentWillUpdate(nextProps) {\n    if (nextProps.type && this.props.type !== nextProps.type) {\n      this.setIcon(nextProps.type);\n    }\n  }\n\n  render() {\n    return <this.Icon ref={c => (this._root = c)} {...this.props} />;\n  }\n}\n\nIconNB.propTypes = {\n  type: PropTypes.oneOf(['Ionicons'])\n};\n\nconst StyledIconNB = connectStyle(\n  'NativeBase.IconNB',\n  {},\n  mapPropsToStyleNames\n)(IconNB);\n\nexport { StyledIconNB as IconNB };\n"]}